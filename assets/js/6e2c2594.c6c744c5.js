"use strict";(self.webpackChunkfrisa_lab_doc=self.webpackChunkfrisa_lab_doc||[]).push([[4551],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return s}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),c=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=c(a),s=r,b=m["".concat(u,".").concat(s)]||m[s]||p[s]||l;return a?n.createElement(b,o(o({ref:t},d),{},{components:a})):n.createElement(b,o({ref:t},d))}));function s(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4051:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return s},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],i={},u="Table",c={unversionedId:"frontend/components/Table",id:"frontend/components/Table",title:"Table",description:"Este articulo explica como crear tablas para cualquier tipo de dato uilizando el componente Table",source:"@site/docs/frontend/components/Table.md",sourceDirName:"frontend/components",slug:"/frontend/components/Table",permalink:"/frisa-lab-doc/docs/frontend/components/Table",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/components/Table.md",tags:[],version:"current",frontMatter:{},sidebar:"frontendSidebar",previous:{title:"Intro",permalink:"/frisa-lab-doc/docs/frontend/intro"},next:{title:"Form",permalink:"/frisa-lab-doc/docs/frontend/components/Form"}},d={},p=[{value:"Crear una Tabla",id:"crear-una-tabla",level:2},{value:"Crear una Tabla con Filtros",id:"crear-una-tabla-con-filtros",level:2},{value:"Crear una Tabla con Acciones",id:"crear-una-tabla-con-acciones",level:2},{value:"Avanzado",id:"avanzado",level:2},{value:"API",id:"api",level:2},{value:"Configuracion",id:"configuracion",level:3},{value:"HeaderObject",id:"headerobject",level:4},{value:"ColumnObject",id:"columnobject",level:4}],m={toc:p};function s(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"table"},"Table"),(0,l.kt)("p",null,"Este articulo explica como crear tablas para cualquier tipo de dato uilizando el componente ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/hugogzz93/anlab-front/blob/master/src/components/Table/Table.jsx"},(0,l.kt)("inlineCode",{parentName:"a"},"Table"))),(0,l.kt)("hr",null),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/hugogzz93/anlab-front/blob/master/src/components/Table/Table.jsx"},"Codigo Fuente")),(0,l.kt)("h2",{id:"crear-una-tabla"},"Crear una Tabla"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Table")," espera ",(0,l.kt)("strong",{parentName:"p"},"dos parametro datos y configuracion")," para poder leer ese JSON.\nLos datos puede ser cualquier objeto, ya que la configuracion contiene la manera de leerlo."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"\nconst data = [\n    {\n        name: 'Hugo', gender: 'Male',\n        address: {\n            city: 'Monterrey',\n            country: 'Mexico'\n        }\n\n   },\n    {\n        name: 'Marcelo', gender: 'Male',\n        address: {\n            city: 'Delafield\n            country: 'Wisconsin'\n        }\n   } \n]\n\nconst configuration = {\n    headers: {\n        id: 'list-people',\n        idColumn: 'name',\n        getId: row => row.name\n    },\n    columns: [\n        {\n            id: 'name',\n            label: 'Nombre',\n            valueFn: row => row.name\n        },{\n            id: 'city',\n            label: 'Ciudad',\n            valueFn: row => row.address.city\n        }\n    ]\n}\n\nconst MyTable = () => (\n    <Table\n        rowData={data}\n        configuration={config}\n    />\n)\n")),(0,l.kt)("h2",{id:"crear-una-tabla-con-filtros"},"Crear una Tabla con Filtros"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Todo")),(0,l.kt)("h2",{id:"crear-una-tabla-con-acciones"},"Crear una Tabla con Acciones"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Todo")),(0,l.kt)("h2",{id:"avanzado"},"Avanzado"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Todo")),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("h3",{id:"configuracion"},"Configuracion"),(0,l.kt)("p",null,"El objeto ",(0,l.kt)("inlineCode",{parentName:"p"},"TableConfiguration")," espera los siguientes parametros."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parametro"),(0,l.kt)("th",{parentName:"tr",align:null},"Tipo"),(0,l.kt)("th",{parentName:"tr",align:null},"Opcional"),(0,l.kt)("th",{parentName:"tr",align:null},"Descripcion"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"headers"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"Table#headerobject"},"headerObject")),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Contiene informacion para que la tabla se conforme al estandar de React de ",(0,l.kt)("a",{parentName:"td",href:"https://reactjs.org/docs/lists-and-keys.html#keys"},"agregar Id's a cada fila"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"columns"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"Table#columnobject"},"columnObject[]")),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Informa que columnas tendra la tabla, como obtener la informacion para las tablas y que desplegar.")))),(0,l.kt)("h4",{id:"headerobject"},"HeaderObject"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parametro"),(0,l.kt)("th",{parentName:"tr",align:null},"Tipo"),(0,l.kt)("th",{parentName:"tr",align:null},"Opcional"),(0,l.kt)("th",{parentName:"tr",align:null},"Descripcion"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Id de la tabla")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"idColumn"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Id de cada fila en la tabla.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"getId"),(0,l.kt)("td",{parentName:"tr",align:null},"(row: any) => string & number"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Funcion que recibe un elemento de los datos (una fila) y regresa el id de la fila.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tableActions"),(0,l.kt)("td",{parentName:"tr",align:null},"(row: any) => React.FunctionalComponent"),(0,l.kt)("td",{parentName:"tr",align:null},"si"),(0,l.kt)("td",{parentName:"tr",align:null},"Elementos que se agregan al encabezado de la tabla, por ejemplo, boton para exportar excel.")))),(0,l.kt)("h4",{id:"columnobject"},"ColumnObject"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parametro"),(0,l.kt)("th",{parentName:"tr",align:null},"Tipo"),(0,l.kt)("th",{parentName:"tr",align:null},"Opcional"),(0,l.kt)("th",{parentName:"tr",align:null},"Descripcion"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"id de la columna, (puede ser diferente al de la fila)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"label"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Encabezado que saldra en la columna de la tabla")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"valueFn"),(0,l.kt)("td",{parentName:"tr",align:null},"(row: any) => string & number"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Funcion que recibe la fila y regresa el dato correspondiente para la columna.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"filterable"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"si (default: false)"),(0,l.kt)("td",{parentName:"tr",align:null},"Crea un elemento para filtrar sobre esta columna.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"filterFn"),(0,l.kt)("td",{parentName:"tr",align:null},"({filterValue: string & number, dataValue: string & number}) => boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"si"),(0,l.kt)("td",{parentName:"tr",align:null},"Funciona para validar si la fila es filtrada o no.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"render"),(0,l.kt)("td",{parentName:"tr",align:null},"(row: any) => React.FunctionalComponent"),(0,l.kt)("td",{parentName:"tr",align:null},"si"),(0,l.kt)("td",{parentName:"tr",align:null},"Cuando se quiere sobreescribir el funcionamiento normal de lo que traera la celda")))))}s.isMDXComponent=!0}}]);